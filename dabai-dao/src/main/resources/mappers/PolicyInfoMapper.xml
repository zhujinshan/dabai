<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dabai.proxy.dao.PolicyInfoMapper">
  <resultMap id="BaseResultMap" type="com.dabai.proxy.po.PolicyInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="use_id" jdbcType="BIGINT" property="useId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="policy_status" jdbcType="TINYINT" property="policyStatus" />
    <result column="commission_amount" jdbcType="DECIMAL" property="commissionAmount" />
    <result column="policy_no" jdbcType="VARCHAR" property="policyNo" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="insure_name" jdbcType="VARCHAR" property="insureName" />
    <result column="assured_name" jdbcType="VARCHAR" property="assuredName" />
    <result column="ensure_time" jdbcType="INTEGER" property="ensureTime" />
    <result column="premium" jdbcType="DECIMAL" property="premium" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="ele_policy_addr" jdbcType="VARCHAR" property="elePolicyAddr" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, use_id, order_id, policy_status, commission_amount, policy_no, product_code, 
    product_name, insure_name, assured_name, ensure_time, premium, start_date, end_date, 
    ele_policy_addr, ctime, utime
  </sql>
  <select id="selectByExample" parameterType="com.dabai.proxy.po.PolicyInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from policy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="com.dabai.proxy.po.PolicyInfoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from policy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update policy_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.useId != null">
        use_id = #{record.useId,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.policyStatus != null">
        policy_status = #{record.policyStatus,jdbcType=TINYINT},
      </if>
      <if test="record.commissionAmount != null">
        commission_amount = #{record.commissionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.policyNo != null">
        policy_no = #{record.policyNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productCode != null">
        product_code = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.insureName != null">
        insure_name = #{record.insureName,jdbcType=VARCHAR},
      </if>
      <if test="record.assuredName != null">
        assured_name = #{record.assuredName,jdbcType=VARCHAR},
      </if>
      <if test="record.ensureTime != null">
        ensure_time = #{record.ensureTime,jdbcType=INTEGER},
      </if>
      <if test="record.premium != null">
        premium = #{record.premium,jdbcType=DECIMAL},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.elePolicyAddr != null">
        ele_policy_addr = #{record.elePolicyAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update policy_info
    set id = #{record.id,jdbcType=BIGINT},
      use_id = #{record.useId,jdbcType=BIGINT},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      policy_status = #{record.policyStatus,jdbcType=TINYINT},
      commission_amount = #{record.commissionAmount,jdbcType=DECIMAL},
      policy_no = #{record.policyNo,jdbcType=VARCHAR},
      product_code = #{record.productCode,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      insure_name = #{record.insureName,jdbcType=VARCHAR},
      assured_name = #{record.assuredName,jdbcType=VARCHAR},
      ensure_time = #{record.ensureTime,jdbcType=INTEGER},
      premium = #{record.premium,jdbcType=DECIMAL},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      ele_policy_addr = #{record.elePolicyAddr,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      utime = #{record.utime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>